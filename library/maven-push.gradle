apply plugin: 'maven'
apply plugin: 'signing'

def RELEASE_URL = RELEASE_URL   //http://domain:8081/nexus/content/repositories/releases/
def SNAPSHOT_URL = SNAPSHOT_URL //http://domain:8081/nexus/content/repositories/snapshots/

def GROUP_ID = GROUP_ID         //io.chengguo.android
def ARTIFACT_ID = ARTIFACT_ID   //artifact_id

def USER_NAME = USER_NAME       //username
def PASSWORD = PASSWORD         //password

configurations {
    deployerJars
}

repositories {
    mavenCentral()
}

def sdk_version() {
    return android.defaultConfig.versionName;
}

// 判断版本是Release or Snapshots
def isReleaseBuild() {
    return sdk_version().contains("SNAPSHOT") == false;
}

// 获取仓库url
def getRepositoryUrl() {
    return isReleaseBuild() ? RELEASE_URL : SNAPSHOT_URL;
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            pom.version = sdk_version()
            pom.artifactId = ARTIFACT_ID
            pom.groupId = GROUP_ID

            repository(url: getRepositoryUrl()) {
                authentication(userName: USER_NAME, password: PASSWORD) // maven授权信息
            }

//            pom.project {
//                name POM_NAME
//                packaging POM_PACKAGING
//                description POM_DESCRIPTION
//                url POM_URL
//
//                scm {
//                    url POM_SCM_URL
//                    connection POM_SCM_CONNECTION
//                    developerConnection POM_SCM_DEV_CONNECTION
//                }
//
//                licenses {
//                    license {
//                        name POM_LICENCE_NAME
//                        url POM_LICENCE_URL
//                        distribution POM_LICENCE_DIST
//                    }
//                }
//
//                developers {
//                    developer {
//                        obtainId POM_DEVELOPER_ID
//                        name POM_DEVELOPER_NAME
//                    }
//                }
//            }
        }
    }
}

// 进行数字签名
signing {
    // 当 发布版本 & 存在"uploadArchives"任务时，才执行
    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives2Maven") }
    sign configurations.archives
}

/*
task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    options.encoding = "UTF-8"
    options.charSet = 'UTF-8'
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}*/
